When would you want to create a remote repository rather than keeping all your work local? 
When I want to share the code with others or collaborate on a big project.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork has the same function as clone, but it is to copy the original repository at GitHub to my repository at GitHub. Clone is to copy the repository form GItHub to my own computer. Branches do not copy anything, they are just some branch from the whole sequence of commits, which can be merged or disposed. we can create branches in both Github and our own computers.

What is the benefit of having a copy of the last known state of the remote stored locally?
In case there is some changes/commits introduced by other people that is unwanted.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Maybe to send emails and descriptions. But it would be hard to make changes when all collaborators want to do something with the code at the same time.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
My collaborator may have made some changes into the master branch, I want to make may changes on top of his/hers. Then I can stay up-to-date with changes others are making by pulling changes into my local master branch or fetch+merge, merge the local master into my branch, push my branch back to the remote, merge my branch into master on GitHub.

You could make your changes directly to the master branch in your fork, but when contributing to a public repository, itâ€™s standard practice to make the changes in a non-master branch within the fork. This way, you can easily keep your master branch up-to-date with master of the original repository, and merge changes from master into your branch when you are ready.